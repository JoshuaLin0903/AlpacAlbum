[{"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/index.js":"1","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/reportWebVitals.js":"2","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/containers/App.js":"3","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/axios.js":"4","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/index.js":"5","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/Search.js":"6","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/HomePage.js":"7","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/All.js":"8","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/SearchSider.js":"9"},{"size":511,"mtime":1609868739839,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609868739840,"results":"12","hashOfConfig":"11"},{"size":5190,"mtime":1609868739839,"results":"13","hashOfConfig":"11"},{"size":274,"mtime":1609868739838,"results":"14","hashOfConfig":"11"},{"size":139,"mtime":1609868739839,"results":"15","hashOfConfig":"11"},{"size":211,"mtime":1609868739838,"results":"16","hashOfConfig":"11"},{"size":292,"mtime":1609868739838,"results":"17","hashOfConfig":"11"},{"size":3749,"mtime":1609946950976,"results":"18","hashOfConfig":"11"},{"size":3879,"mtime":1609868739839,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16y393d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/index.js",[],["41","42"],"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/reportWebVitals.js",[],"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/containers/App.js",["43"],"import '../style.css';\nimport {HOMEPAGE, SEARCH, ALL, SEARCH_SIDER} from '../components'\nimport React, { useEffect, useState } from 'react'\nimport {login} from '../axios'\nimport 'antd/dist/antd.css';\nimport alpaca from '../images/alpaca.png';\nimport { Layout, Menu, message, Input, Button, Popconfirm, Avatar} from 'antd';\nimport {\n  SearchOutlined,\n  PictureOutlined,\n  HeartTwoTone,\n  HomeOutlined,\n  UserOutlined,\n  KeyOutlined\n} from '@ant-design/icons';\n\nconst { Header, Content, Footer, Sider} = Layout;\n\nfunction App() {\n\tconst [menuCollapsed, setMenuCollapsed] = useState(true);\n\tconst [searchCollapsed, setSearchCollapsed] = useState(true);\n\tconst [currentEvent, setCurrentEvent] = useState('home')\n  const [mainDisplay, setMainDisplay] = useState(<HOMEPAGE/>)\n  const [logIN, setLogIN] = useState(false)\n  const [username, setUserName] = useState('')\n  const [password, setPassword]= useState('')\n\n  const handleLogIn = async () => {\n    const msg = await login(password)\n    if (username === '' || password === ''){\n      message.error('Both username and password must be entered!')\n    }\n    else if(msg === 'Wrong password')\n    {\n      message.error('Wrong password!')\n    }\n    else if(msg === 'Correct password')\n    {\n      message.success('Successfully login!')\n      setLogIN(true)\n    }\n  }\n\n  const handleLogOut = () =>{\n    window.location.reload()\n  }\n\n  const handleMenuCollapse =() =>{\n  \tif (menuCollapsed === false && searchCollapsed === false){\n  \t\tsetSearchCollapsed(true);\n  \t}\n  \tsetMenuCollapsed(!menuCollapsed);\n  }\n\n  useEffect(()=>{\n    switch(currentEvent){\n      case 'home':\n        setMainDisplay(<HOMEPAGE/>)\n        break\n      case 'search':\n        setMainDisplay(<SEARCH/>)\n        break\n      case 'all':\n        setMainDisplay(<ALL/>)\n        break\n      default:\n        setMainDisplay(<HOMEPAGE/>)\n        break\n    }\n  }, [currentEvent])\n\n  return (\n   \t<Layout style={{ minHeight: '100vh'}}>\n      {logIN?\n     \t(<Sider \n       \tcollapsible \n       \tcollapsed={menuCollapsed} \n       \twidth={500} \n       \tonCollapse={() => handleMenuCollapse()}>\n     \t\t<div className=\"logo-div\">\n     \t\t\t<HeartTwoTone twoToneColor=\"#eb2f96\"/>\n       \t\t\tLOGO\n      \t</div>\n        <Menu theme=\"dark\" mode=\"inline\" style={{ textAlign: 'center' }} defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\" \n           \ticon={<HomeOutlined />} \n           \tonClick={()=>{setCurrentEvent(\"home\");setSearchCollapsed(true);}}>\n           \tHome Page\n          </Menu.Item>\n          \t{searchCollapsed?\n            \t<Menu.Item \n           \t   \tkey=\"2\" \n           \t   \ticon={<SearchOutlined/>} \n           \t   \tonClick={() => {setSearchCollapsed(false);setCurrentEvent(\"search\");setMenuCollapsed(false);}}>\n            \t\tSearch by Tags\n            \t</Menu.Item>\n              :\n             \t<SEARCH_SIDER/>\n            }\n          <Menu.Item key=\"3\" icon={<PictureOutlined />}\n          \tonClick={()=>{setCurrentEvent(\"all\");setSearchCollapsed(true);}}>\n          \tView All Albums\n          </Menu.Item>\n        </Menu>\n      </Sider>)\n      :\n      (<></>)}\n      <Layout className=\"site-layout\">\n      \t<Header className=\"header\">\n          {logIN?\n          <>\n            <div className=\"user\">\n              <div>\n                <Avatar icon={<UserOutlined/>} style={{marginRight: 8}}/>\n                {username}\n              </div>\n              <div>\n                <Popconfirm placement=\"bottom\" \n                  onConfirm={handleLogOut} \n                  title=\"Are you sure you want to logout?\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <Button ghost=\"true\" size=\"small\" \n                  style={{color:\"white\", borderColor: \"gray\", marginLeft: 10}}> \n                    Logout \n                  </Button>\n                </Popconfirm>\n              </div>\n            </div>\n          </>\n          :\n          <></>}\n      \t</Header>\n        <Content style={{ margin: '0 16px' }}>\n       \t  {logIN ? \n            mainDisplay\n            :(\n            <div className=\"main-display\">\n              <div className=\"image-display\">\n                <img src={alpaca}/>\n              </div>\n              <Input \n                placeholder=\"Enter your username\" \n                prefix={<UserOutlined/>} \n                style={{width: 250, margin:5}}\n                onChange={(e) => setUserName(e.target.value)}\n                onKeyDown={(e) => {\n                  if(e.key === 'Enter') {handleLogIn()}\n                }}/>\n              <Input.Password placeholder=\"Enter your password\"\n                prefix={<KeyOutlined />}\n                style={{width:250, margin:5}}\n                onChange={(e) => setPassword(e.target.value)}\n                onKeyDown={(e) => {\n                  if(e.key === 'Enter') {handleLogIn()}\n                }}/>\n              <Button type=\"primary\" \n                style={{margin:5}} \n                onClick={handleLogIn} > \n                Login\n            </Button>\n            </div>\n          )}\n        </Content>\n        <Footer style={{ textAlign: 'center' }}> Footer</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/axios.js",[],"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/index.js",[],"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/Search.js",[],"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/HomePage.js",["44"],"import React from 'react'\r\nimport alpaca from '../images/alpaca.png';\r\nimport '../style.css'\r\n\r\nexport const HOMEPAGE = () =>{\r\n\r\n\treturn(\r\n\t\t<div className=\"main-display\">\r\n\t\t\t<div className=\"image-display\">\r\n      \t<img src={alpaca}/>\r\n    \t</div>\r\n    \t<p> Welcome! </p>\r\n    </div>\r\n\t)\r\n}","/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/All.js",[],"/Users/joshua/Files/Coding/2020Web/WebProgramming-FinalProject/src/components/SearchSider.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":141,"column":17,"nodeType":"51","endLine":141,"endColumn":36},{"ruleId":"49","severity":1,"message":"50","line":10,"column":8,"nodeType":"51","endLine":10,"endColumn":27},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]