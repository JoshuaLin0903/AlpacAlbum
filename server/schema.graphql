type Query {
    getUser: User
    images(tags: [String!], num: Int): [Image!]
    albumPreview(tag: String): [Image!]
    albumCount(tag: String): Int!
    tags(query: String): [String!]
}

type Mutation {
    registerUser(name: String!, email: String!, password: String!): User
    loginUser(name: String, email: String, password: String!): User
    logoutUser: Boolean
    createImage(data: ImageInput!): Image
    deleteImage(id: ID): Image
    addImageTags(id: ID!, tags: [String!]!): Image
    deleteImageTags(id: ID!, tags: [String!]!): Image
}

type Subscription {
    album(tag: String): Image!
}

input ImageInput {
    url: String!
    tags: [String!]
}

type Image {
    _id: ID!
    url: String!
    tags: [String!]
}

type User {
    _id: ID!
    name: String!
    email: String!
    password: String!
}


enum MutationType{
    CREATE
    UPDATE
    DELETE
    LOGIN
    LOGOUT
}